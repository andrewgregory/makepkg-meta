=head1 NAME

makepkg-meta - create and install custom meta-packages

=head1 SYNOPSIS

 makepkg-meta [options]

=head1 OPTIONS

=over

=item B<--name>=I<pkgname>

Specify the package name.

=item B<--update>=I<pkgname>

Equivalent to B<--name> except if a package named I<pkgname> is currently
installed it will be queried for any fields not explicitly provided.

=item B<--description>=I<pkgdesc>

Specify the package description.

=item B<--depends>=I<dependency>

Comma-separated list of package dependencies.  May be specified multiple times.

=item B<--add-depends>=I<dependency>

Comma-separated list of package dependencies.  Dependencies are added to the
depends list I<after> checking for existing dependencies.  May be specified
multiple times.

=item B<--rm-depends>=I<dependency>

Comma-separates list of dependencies to be removed from the depends list
I<after> loading existing dependencies.  May be specified multiple times.

=item B<--groups>=I<group>

Comma-separated list of package groups.  May be specified multiple times.
Packages are automatically in the C<meta> group.

=item B<--add-groups>=I<group>

Comma-separated list of package groups.  Groups are added to the group list
I<after> loading existing groups.  May be specified multiple times.

=item B<--rm-groups>=I<groups>

Comma-separates list of groups to be removed from the group list I<after>
loading existing groups.  May be specified multiple times.

=item B<--dump>

Write the PKGBUILD to F<stdout> without installing it.

=item B<--help>

Display brief help information.

=item B<--version>

Display version information.

=back

=head1 EXAMPLES

Create and install a new metapackage:

 makepkg-meta --name foo --description 'foo meta package' --depends bar,baz \
    --groups foo_group

When called with B<--update>, information will be pulled from an installed
package.  If the package is not currently installed, a new one will be created.

 makepkg-meta --update bar --add-depends newdep --rm-depends olddep
